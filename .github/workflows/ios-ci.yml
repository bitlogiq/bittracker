name: iOS CI (Flutter → Pods → Build → TestFlight)

on:
  push:
    branches: [ main, master ]
    paths:
      - "ios/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/ios-ci.yml"
  workflow_dispatch:

jobs:
  ios:
    runs-on: macos-14

    env:
      FLUTTER_VERSION: '3.35.1'  # match your local
      IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}          # e.g. com.bitlogiq.bittracker
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}          # e.g. 1A2BC3D4EF
      APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}        # Apple ID for Fastlane
      ASC_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      ASC_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      ASC_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Flutter pub get
        run: flutter pub get

      - name: Install Ruby + gems (fastlane & cocoapods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: false
      - run: |
          gem install --no-document cocoapods -v "~> 1.15"
          gem install --no-document fastlane   -v ">= 2.222"

      - name: Pod install
        run: |
          cd ios
          pod repo update
          pod install

      - name: Create App Store Connect API key file
        shell: bash
        run: |
          cat > AuthKey.json <<'JSON'
          {
            "key_id": "${ASC_KEY_ID}",
            "issuer_id": "${ASC_ISSUER_ID}",
            "key": "${ASC_PRIVATE_KEY}",
            "duration": 1200,
            "in_house": false
          }
          JSON

      # Build the IPA using fastlane (no Fastfile needed)
      - name: Build IPA
        run: |
          # build_app via fastlane 'run' so no Fastfile is required
          fastlane run build_app \
            scheme:"Runner" \
            workspace:"ios/Runner.xcworkspace" \
            export_method:"app-store" \
            clean:true \
            include_bitcode:false \
            output_directory:"ios/build" \
            output_name:"BitTracker.ipa" \
            xcargs:"DEVELOPMENT_TEAM=${APPLE_TEAM_ID} PRODUCT_BUNDLE_IDENTIFIER=${IOS_BUNDLE_ID}"

      # Optional: upload to TestFlight (comment out if you only want artifacts)
      - name: Upload to TestFlight
        env:
          DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS: "-t DAV"
        run: |
          ruby -r json -e 'j=JSON.parse(File.read("AuthKey.json")); \
            system("fastlane run upload_to_testflight \
              api_key:\\\"#{j}\\\" \
              skip_waiting_for_build_processing:true \
              distribute_external:false")'

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            ios/build/*.ipa
            ios/build/*.log
            ios/fastlane/report.xml
          if-no-files-found: warn
