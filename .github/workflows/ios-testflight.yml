name: iOS TestFlight

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: macos-14
    env:
      APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
      TEAM_ID: ${{ secrets.TEAM_ID }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      ASC_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      ASC_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APPLE_ID: ${{ secrets.APPLE_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.35.1

      - name: Flutter pub get
        run: flutter pub get

      - name: Precache iOS artifacts
        run: flutter precache --ios

      # Flutter will invoke CocoaPods automatically using your Podfile
      - name: Warm iOS build (profile, no codesign)
        run: flutter build ios --profile --no-codesign

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Install fastlane
        run: gem install fastlane

      # Pull signing certs & provisioning profiles from your match repo
      - name: Fastlane match (appstore)
        run: |
          export MATCH_GIT_BASIC_AUTHORIZATION="${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}"
          fastlane match appstore --readonly true \
            --git_url "$MATCH_GIT_URL" \
            --app_identifier "$APP_IDENTIFIER" \
            --team_id "$TEAM_ID" \
            --username "$APPLE_ID"
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      # Build signed IPA for App Store distribution
      - name: Build IPA (app-store)
        run: |
          /usr/libexec/PlistBuddy -c "Set :DEVELOPMENT_TEAM $TEAM_ID" ios/Runner.xcodeproj/project.pbxproj || true
          flutter build ipa --release --export-method app-store

      # Upload to TestFlight
      - name: Write API key to file
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_P8 }}" > ./AuthKey.p8

      - name: Upload to TestFlight
        run: |
          fastlane pilot upload \
            --api_key_path ./AuthKey.p8 \
            --api_key_id $ASC_KEY_ID \
            --api_key_issuer_id $ASC_ISSUER_ID \
            --ipa "build/ios/ipa/Runner.ipa" \
            --skip_waiting_for_build_processing true
