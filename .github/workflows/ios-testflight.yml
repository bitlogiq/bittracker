name: iOS TestFlight

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: macos-14
    env:
      APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
      TEAM_ID: ${{ secrets.TEAM_ID }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      ASC_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      ASC_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APPLE_ID: ${{ secrets.APPLE_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.35.1

      - name: Flutter pub get
        run: flutter pub get

      # Ensure iOS platform + Podfile exist (idempotent; safe if they already do)
      - name: Ensure iOS platform exists
        run: flutter create . --platforms ios

      - name: Precache iOS artifacts
        run: flutter precache --ios

      # Warm build triggers CocoaPods generation internally (no separate `pod install`)
      - name: Warm iOS build (profile, no codesign)
        run: flutter build ios --profile --no-codesign

      - name: Show iOS files (debug)
        run: |
          ls -la
          ls -la ios || true
          test -f ios/Podfile && echo "✅ Podfile found" || (echo "❌ Podfile missing"; exit 1)

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Inst
