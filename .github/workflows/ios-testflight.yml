name: iOS TestFlight

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: macos-14
    env:
      # App / Apple IDs
      APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}                    # za.co.bitlogiq.bittracker
      TEAM_ID: ${{ secrets.TEAM_ID }}                                  # R4R4AW7JUQ
      APPLE_ID: ${{ secrets.APPLE_ID }}                                # roelofhorowitz@hotmail.com

      # ASC API key
      ASC_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}              # G3T7T7WP8A
      ASC_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}        # issuer UUID
      ASC_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}    # full .p8 contents

      # fastlane match (cert repo)
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}                      # https://github.com/bitlogiq/ios-cert-store.git
      MATCH_GIT_BRANCH: master                                         # your cert repo branch
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}                    # Superm@n007
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }} # Base64(username:PAT)

      # ðŸ”’ Make 100% sure match is NOT readonly
      MATCH_READONLY: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.35.1

      - name: Flutter pub get
        run: flutter pub get

      - name: Precache iOS artifacts
        run: flutter precache --ios

      - name: Warm iOS build (profile, no codesign)
        run: flutter build ios --profile --no-codesign

      - name: Create CI keychain
        run: |
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -lut 21600 build.keychain

      - name: Write ASC API key (JSON) for fastlane
        run: |
          cat > AuthKey.json <<'JSON'
          {
            "key_id": "${ASC_KEY_ID}",
            "issuer_id": "${ASC_ISSUER_ID}",
            "key": "${ASC_PRIVATE_KEY}",
            "duration": 1200,
            "in_house": false
          }
          JSON

      - name: Fastlane match (appstore, read-write)
        run: |
          echo "Using cert repo: $MATCH_GIT_URL (branch: $MATCH_GIT_BRANCH)"
          fastlane match appstore \
            --readonly false \
            --git_url "$MATCH_GIT_URL" \
            --git_branch "$MATCH_GIT_BRANCH" \
            --git_basic_authorization "$MATCH_GIT_BASIC_AUTHORIZATION" \
            --app_identifier "$APP_IDENTIFIER" \
            --team_id "$TEAM_ID" \
            --username "$APPLE_ID" \
            --api_key_path ./AuthKey.json
        env:
          MATCH_GIT_URL: ${{ env.MATCH_GIT_URL }}
          MATCH_GIT_BRANCH: ${{ env.MATCH_GIT_BRANCH }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ env.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ env.MATCH_PASSWORD }}
          MATCH_READONLY: "false"
          APP_IDENTIFIER: ${{ env.APP_IDENTIFIER }}
          TEAM_ID: ${{ env.TEAM_ID }}
          APPLE_ID: ${{ env.APPLE_ID }}

      - name: Build IPA (app-store)
        run: |
          /usr/libexec/PlistBuddy -c "Set :DEVELOPMENT_TEAM $TEAM_ID" ios/Runner.xcodeproj/project.pbxproj || true
          flutter build ipa --release --export-method app-store

      - name: Write API key (.p8) to file
        run: echo "${ASC_PRIVATE_KEY}" > ./AuthKey.p8

      - name: Upload to TestFlight
        run: |
          gem install fastlane
          fastlane pilot upload \
            --api_key_path ./AuthKey.p8 \
            --api_key_id $ASC_KEY_ID \
            --api_key_issuer_id $ASC_ISSUER_ID \
            --ipa "build/ios/ipa/Runner.ipa" \
            --skip_waiting_for_build_processing true
