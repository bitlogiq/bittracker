# --- Decode p12/profile/key robustly (handles stray CR/LF/newlines) ---
- name: Decode signing & ASC key (robust)
  shell: bash
  run: |
    set -e
    # p12
    (echo "$IOS_P12_B64" | tr -d '\n\r' | base64 -D > dist.p12) || (echo "$IOS_P12_B64" | base64 -d > dist.p12)
    # mobileprovision
    (echo "$IOS_MOBILEPROVISION_B64" | tr -d '\n\r' | base64 -D > app.mobileprovision) || (echo "$IOS_MOBILEPROVISION_B64" | base64 -d > app.mobileprovision)
    # .p8
    (echo "$ASC_PRIVATE_KEY_B64" | tr -d '\n\r' | base64 -D > AuthKey.p8) || (echo "$ASC_PRIVATE_KEY_B64" | base64 -d > AuthKey.p8)

    echo "Sizes:"
    ls -lah dist.p12 app.mobileprovision AuthKey.p8

    # Build AuthKey.json for fastlane
    KEY_ESCAPED=$(awk '{gsub(/"/,"\\\""); printf "%s\\n",$0}' AuthKey.p8)
    cat > AuthKey.json <<JSON
    {"key_id":"$ASC_KEY_ID","issuer_id":"$ASC_ISSUER_ID","key":"$KEY_ESCAPED","duration":1200,"in_house":false}
    JSON

# --- Sanity: prove the p12 password BEFORE keychain import ---
- name: Verify p12 password (sanity check)
  shell: bash
  run: |
    set -e
    openssl pkcs12 -in dist.p12 -passin pass:"$IOS_P12_PASSWORD" -nokeys -clcerts -info >/dev/null
    echo "✅ p12 password OK"

# --- Install into temp keychain ---
- name: Install signing into temporary keychain
  shell: bash
  run: |
    set -e
    KEYCHAIN=build.keychain
    PW=ci_temp_123
    security create-keychain -p "$PW" "$KEYCHAIN"
    security set-keychain-settings -lut 21600 "$KEYCHAIN"
    security unlock-keychain -p "$PW" "$KEYCHAIN"
    security list-keychains -d user -s "$KEYCHAIN"
    security import dist.p12 -k "$KEYCHAIN" -P "$IOS_P12_PASSWORD" -A -T /usr/bin/codesign
    security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$PW" "$KEYCHAIN"

    mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
    UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< "$(/usr/bin/security cms -D -i app.mobileprovision)")
    NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name' /dev/stdin <<< "$(/usr/bin/security cms -D -i app.mobileprovision)")
    cp app.mobileprovision "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"
    echo "PROFILE_UUID=$UUID" >> $GITHUB_ENV
    echo "PROFILE_NAME=$NAME" >> $GITHUB_ENV
    echo "✅ Installed profile: $NAME ($UUID)"
