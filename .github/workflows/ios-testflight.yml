name: iOS TestFlight

on:
  workflow_dispatch:

jobs:
  ios-testflight:
    runs-on: macos-14

    env:
      # App metadata
      APP_IDENTIFIER: za.co.bitlogiq.bittracker
      APPLE_ID: roelofhorowitz@hotmail.com
      TEAM_ID: R4R4AW7JUQ

      # App Store Connect API (secrets already in your repo)
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}

      # match via HTTPS + PAT (NO SSH)
      MATCH_GIT_URL: https://github.com/bitlogiq/ios-cert-store.git
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      MATCH_GIT_USERNAME: ${{ secrets.MATCH_GIT_USERNAME }}  # your GitHub username
      MATCH_GIT_PAT:      ${{ secrets.MATCH_GIT_PAT }}       # PAT with repo scope

      # CI hygiene
      CI: "true"
      FASTLANE_SKIP_CONFIRMATIONS: "1"
      GIT_TERMINAL_PROMPT: "0"
      FASTLANE_CI: "1"
      FASTLANE_DISABLE_COLORS: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Flutter (pinned)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.35.1
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Bundle install (using ios/Gemfile)
        working-directory: ios
        env:
          BUNDLE_GEMFILE: ${{ github.workspace }}/ios/Gemfile
        run: bundle install --jobs 4 --retry 3

      - name: Pod install (via Bundler)
        working-directory: ios
        env:
          BUNDLE_GEMFILE: ${{ github.workspace }}/ios/Gemfile
        run: |
          bundle exec pod repo update
          bundle exec pod install

      # Build the base64 ONLY (no "Basic " prefix)
      - name: Build Basic auth (base64 only)
        id: basicauth
        shell: bash
        run: |
          base64_only=$(printf "%s:%s" "$MATCH_GIT_USERNAME" "$MATCH_GIT_PAT" | base64)
          echo "b64=$base64_only" >> "$GITHUB_OUTPUT"

      # Optional quick sanity: should NOT print 'Basic' as first 5 chars
      - name: Debug auth header prefix
        run: |
          echo "First 5 chars of auth: ${MATCH_GIT_BASIC_AUTHORIZATION:0:5:-}"
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ steps.basicauth.outputs.b64 }}

      - name: Build & upload to TestFlight
        working-directory: ios
        env:
          BUNDLE_GEMFILE: ${{ github.workspace }}/ios/Gemfile
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ steps.basicauth.outputs.b64 }}  # base64 only
        run: bundle exec fastlane ios beta

      - name: Archive artifacts (ipa, logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            ios/build/**/*.ipa
            ~/Library/Logs/gym/**/*.log
            /Users/runner/Library/Logs/gym/**/*.log
            /Users/runner/Library/Developer/Xcode/Archives/**/*.xcarchive
