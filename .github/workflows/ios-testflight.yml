name: iOS TestFlight

on:
  workflow_dispatch: {}     # run manually from Actions tab

jobs:
  ios-testflight:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash

    env:
      APP_IDENTIFIER: za.co.bitlogiq.bittracker
      TEAM_ID: R4R4AW7JUQ

      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      MATCH_GIT_TOKEN: ${{ secrets.MATCH_GIT_TOKEN }}

      ASC_KEY_ID:    ${{ secrets.ASC_KEY_ID }}
      ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
      ASC_KEY_P8:    ${{ secrets.ASC_KEY_P8 }}

      # Fastlane reads the .p8 file path from the Fastfile
      APP_STORE_CONNECT_API_KEY_PATH: ${{ github.workspace }}/appstore_connect_api_key.json

      # Use the root Gemfile even when steps run inside ios/
      BUNDLE_GEMFILE: ${{ github.workspace }}/Gemfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter pub get
        run: |
          set -euo pipefail
          flutter pub get

      - name: Set up Ruby (Bundler pinned)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler: '2.4.19'
          bundler-cache: true

      - name: Bundle install (root Gemfile)
        run: |
          set -euo pipefail
          bundle install --jobs 4 --retry 3

      - name: Write App Store Connect API key (.p8) to file
        run: |
          set -euo pipefail
          # Accept raw .p8 or base64â€”decode if possible, else write as-is
          if echo "$ASC_KEY_P8" | base64 --decode > "$APP_STORE_CONNECT_API_KEY_PATH" 2>/dev/null; then
            :
          else
            echo "$ASC_KEY_P8" > "$APP_STORE_CONNECT_API_KEY_PATH"
          fi

      - name: CocoaPods install
        working-directory: ios
        run: |
          set -euo pipefail
          bundle exec pod install --verbose

      - name: Build & upload with fastlane
        working-directory: ios        # <-- IMPORTANT: run inside ios/ so Fastfile is found
        run: |
          set -euo pipefail
          bundle exec fastlane ci

      - name: Archive artifacts (ipa, logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            ios/build/**/*.ipa
            ~/Library/Logs/gym/**/*.log
            /Users/runner/Library/Logs/gym/**/*.log
            /Users/runner/Library/Developer/Xcode/Archives/**/*.xcarchive
