name: Flutter CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  # üëá Change this to "." if pubspec.yaml is at repo root,
  # or to the single folder that contains your Flutter app.
  APP_DIR: "."

jobs:
  pub_get:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print working dir & tree
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          pwd
          ls -la
          echo "---- APP_DIR ----"
          cd "${{ env.APP_DIR }}"
          pwd
          ls -la

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v
        working-directory: ${{ env.APP_DIR }}

      - name: Flutter precache (iOS)
        run: flutter precache --ios
        working-directory: ${{ env.APP_DIR }}

      - name: Pub get
        run: flutter pub get
        working-directory: ${{ env.APP_DIR }}

      # Export FLUTTER_ROOT so the Podfile can find Flutter (your Podfile patch also handles this, but this helps too)
      - name: Export FLUTTER_ROOT
        # The flutter binary typically lives at $FLUTTER_ROOT/bin/flutter
        run: echo "FLUTTER_ROOT=$(dirname $(dirname $(which flutter)))" >> $GITHUB_ENV

  build_android_web:
    needs: pub_get
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Pub get
        run: flutter pub get
        working-directory: ${{ env.APP_DIR }}

      - name: Build Android APK (debug)
        run: flutter build apk --debug
        working-directory: ${{ env.APP_DIR }}

      - name: Build Web (release)
        run: flutter build web --release
        working-directory: ${{ env.APP_DIR }}

      - name: Upload Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: ${{ env.APP_DIR }}/build/web

      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.APP_DIR }}/build/app/outputs/flutter-apk/app-debug.apk

  build_ios:
    needs: pub_get
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v
        working-directory: ${{ env.APP_DIR }}

      - name: Ensure Flutter iOS bits exist
        run: |
          flutter precache --ios
          flutter pub get
        working-directory: ${{ env.APP_DIR }}

      # Re‚Äëexport FLUTTER_ROOT in this job as well (each job has its own env)
      - name: Export FLUTTER_ROOT
        run: echo "FLUTTER_ROOT=$(dirname $(dirname $(which flutter)))" >> $GITHUB_ENV

      - name: Sanity: show iOS Flutter files
        run: |
          echo "FLUTTER_ROOT=$FLUTTER_ROOT"
          ls -la ios/Flutter || true
          test -f ios/Flutter/Generated.xcconfig && echo "Generated.xcconfig present ‚úÖ" || echo "Generated.xcconfig missing ‚ùå"
        working-directory: ${{ env.APP_DIR }}

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod --version
        working-directory: ${{ env.APP_DIR }}/ios

      - name: Pod install
        run: pod install --repo-update
        working-directory: ${{ env.APP_DIR }}/ios

      - name: Build iOS (no codesign)
        run: flutter build ios --no-codesign
        working-directory: ${{ env.APP_DIR }}

      - name: Upload iOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: |
            ${{ env.APP_DIR }}/build/ios/iphoneos
            ${{ env.APP_DIR }}/build/ios/archive
