default_platform(:ios)

platform :ios do
  desc "Build & upload to TestFlight"
  lane :beta do
    UI.message(">>> app_store_connect_api_key")
    app_store_connect_api_key(
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_id:    ENV["APP_STORE_CONNECT_KEY_ID"],
      key_content: ENV["APP_STORE_CONNECT_PRIVATE_KEY"], # PKCS8, multiline
      is_key_content_base64: false
    )

    UI.message(">>> match (HTTPS + PAT)")
    bundle_id   = ENV["APP_IDENTIFIER"]
    team_id     = ENV["TEAM_ID"]
    apple_id    = ENV["APPLE_ID"]

    match(
      type: "appstore",
      readonly: true,
      storage_mode: "git",
      git_url: ENV["MATCH_GIT_URL"],
      git_branch: "main",
      git_basic_authorization: ENV["MATCH_GIT_BASIC_AUTH_B64"], # base64(x-access-token:PAT)
      app_identifier: [bundle_id],
      username: apple_id,
      team_id: team_id,
      keychain_name: "login.keychain",
      keychain_password: ENV["KEYCHAIN_PASSWORD"] # optional but removes keychain popups
    )

    UI.message(">>> update_project_team")
    update_project_team(
      path: "Runner.xcodeproj",
      teamid: team_id,
      targets: ["Runner", "RunnerTests"]
    )

    UI.message(">>> update_code_signing_settings (manual)")
    update_code_signing_settings(
      use_automatic_signing: false,
      path: "Runner.xcodeproj",
      team_id: team_id,
      targets: ["Runner", "RunnerTests"]
    )

    UI.message(">>> increment_build_number")
    increment_build_number(xcodeproj: "Runner.xcodeproj")

    UI.message(">>> build_app with explicit signing overrides")
    profile_name = "match AppStore #{bundle_id}"

    build_app(
      scheme: "Runner",
      workspace: "Runner.xcworkspace",
      export_method: "app-store",
      # Donâ€™t pass PROVISIONING_PROFILE_SPECIFIER in xcargs (space causes split)
      xcargs: %Q[
        DEVELOPMENT_TEAM=#{team_id}
        CODE_SIGN_STYLE=Manual
        PRODUCT_BUNDLE_IDENTIFIER=#{bundle_id}
        CODE_SIGN_IDENTITY="Apple Distribution"
      ],
      export_options: {
        signingStyle: "manual",
        teamID: team_id,
        provisioningProfiles: {
          bundle_id => profile_name
        }
      }
    )

    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      distribute_external: false
      # groups: ["Internal Testers"] # optional
    )
  end
end
