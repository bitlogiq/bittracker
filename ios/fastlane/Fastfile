default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :beta do
    # App Store Connect API key from env
    api_key = app_store_connect_api_key(
      key_id:      ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id:   ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_PRIVATE_KEY"], # full PEM with BEGIN/END
      is_key_content_base64: false,
      duration: 1200,
      in_house: false
    )

    # Read ONLY base64(username:token) from workflow (strip any accidental 'Basic ')
    basicauth_b64 = (ENV["MATCH_GIT_BASIC_AUTH_B64"] || "").sub(/^Basic\s+/i, "")
    if basicauth_b64.empty?
      UI.crash!("MATCH_GIT_BASIC_AUTH_B64 is empty. Check workflow step that sets it.")
    end

    # Pull signing (HTTPS + PAT)
    match(
      type: "appstore",
      readonly: true,
      storage_mode: "git",
      git_url: ENV["MATCH_GIT_URL"],            # https://github.com/bitlogiq/ios-cert-store.git
      git_branch: "main",                       # change to "master" if your cert repo uses master
      git_basic_authorization: basicauth_b64,   # base64 ONLY
      api_key: api_key,
      app_identifier: [ENV["APP_IDENTIFIER"]],
      team_id: ENV["TEAM_ID"],
      username: ENV["APPLE_ID"]
    )

    increment_build_number(xcodeproj: "Runner.xcodeproj")

    # Build with explicit signing overrides so Xcode uses your team & profile
    build_app(
      scheme: "Runner",
      workspace: "Runner.xcworkspace",
      export_method: "app-store",

      # ✅ Make Xcode use your Development Team and Manual signing in CI
      xcargs: "DEVELOPMENT_TEAM=#{ENV['TEAM_ID']} CODE_SIGN_STYLE=Manual",

      # ✅ Tell export which provisioning profile to use (from match)
      export_options: {
        provisioningProfiles: {
          "za.co.bitlogiq.bittracker" => "match AppStore za.co.bitlogiq.bittracker"
        }
      }
    )

    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true,
      submit_for_beta_review: false
    )
  end
end
