default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :beta do
    # 1) App Store Connect API key from env (no Apple ID login)
    api_key = app_store_connect_api_key(
      key_id:      ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id:   ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_PRIVATE_KEY"], # full PEM (BEGIN/END included)
      is_key_content_base64: false,
      duration: 1200,
      in_house: false
    )

    # 2) Fetch signing via match (SSH deploy key)
    #    - Use your SSH URL in MATCH_GIT_URL (e.g., git@github.com:bitlogiq/ios-cert-store.git)
    #    - MATCH_GIT_PRIVATE_KEY must contain the private key text
    match(
      type: "appstore",
      readonly: true,
      storage_mode: "git",
      git_url: ENV["MATCH_GIT_URL"],
      git_branch: "main",                        # set to your cert repo's default branch
      git_private_key: ENV["MATCH_GIT_PRIVATE_KEY"],
      api_key: api_key,
      app_identifier: [ENV["APP_IDENTIFIER"]],
      team_id: ENV["TEAM_ID"],
      username: ENV["APPLE_ID"]
    )

    # 3) Bump build number to avoid TestFlight duplicate build errors
    increment_build_number(xcodeproj: "Runner.xcodeproj")

    # 4) Build the iOS app (running from ios/ in CI)
    build_app(
      scheme: "Runner",
      workspace: "Runner.xcworkspace",
      export_method: "app-store"
    )

    # 5) Upload to TestFlight
    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true,
      submit_for_beta_review: false
    )
  end
end
