# Fastfile for iOS TestFlight CI
# Uses:
# - App Store Connect API key via env: APP_STORE_CONNECT_KEY_ID, APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_PRIVATE_KEY
# - match via HTTPS + PAT using env: MATCH_GIT_URL, MATCH_GIT_BASIC_AUTH_B64, MATCH_PASSWORD (for repo encryption)
# - Team & bundle env: APP_IDENTIFIER, APPLE_ID, TEAM_ID

default_platform(:ios)

platform :ios do
  lane :beta do
    UI.message ">>> app_store_connect_api_key"
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_PRIVATE_KEY"],
      in_house: false
    )

    UI.message ">>> match (HTTPS + PAT)"
    match(
      type: "appstore",
      readonly: true,
      storage_mode: "git",
      git_url: ENV["MATCH_GIT_URL"],       # e.g. https://github.com/bitlogiq/ios-cert-store.git
      git_branch: "main",
      # Built in workflow: echo "b64=..." to output -> env var MATCH_GIT_BASIC_AUTH_B64
      git_basic_authorization: ENV["MATCH_GIT_BASIC_AUTH_B64"],
      app_identifier: [ENV["APP_IDENTIFIER"]],
      username: ENV["APPLE_ID"],
      team_id: ENV["TEAM_ID"]
      # MATCH_PASSWORD should be set in env/secrets for repo decryption
    )

    UI.message ">>> update_project_team"
    update_project_team(
      path: "Runner.xcodeproj",
      teamid: ENV["TEAM_ID"],
      targets: ["Runner", "RunnerTests"]
    )

    UI.message ">>> update_code_signing_settings(false)"
    update_code_signing_settings(
      use_automatic_signing: false,
      path: "Runner.xcodeproj",
      team_id: ENV["TEAM_ID"],
      targets: ["Runner", "RunnerTests"]
    )

    UI.message ">>> increment_build_number"
    increment_build_number

    UI.message ">>> build_app with clean xcargs (no spaced values)"
    bundle_id    = ENV["APP_IDENTIFIER"]
    team_id      = ENV["TEAM_ID"]
    profile_name = "match AppStore #{bundle_id}"

    build_app(
      scheme: "Runner",
      workspace: "Runner.xcworkspace",
      destination: "generic/platform=iOS",
      export_method: "app-store",

      # Only pass values without spaces here (spaces break xcodebuild parsing)
      xcargs: "DEVELOPMENT_TEAM=#{team_id} CODE_SIGN_STYLE=Manual PRODUCT_BUNDLE_IDENTIFIER=#{bundle_id}",

      # Set provisioning profile through export_options (safe with spaces)
      export_options: {
        signingStyle: "manual",
        teamID: team_id,
        provisioningProfiles: {
          bundle_id => profile_name
        }
      }
    )

    pilot(
      skip_waiting_for_build_processing: true
    )
  end
end
