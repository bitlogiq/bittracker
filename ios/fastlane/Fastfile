default_platform(:ios)

platform :ios do
  desc "CI lane to build and upload to TestFlight"
  lane :ci do
    # --- Temporary CI keychain ---
    create_keychain(
      name: "ci_tmp",
      password: "temp_password_123",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true,
      require_create: false
    )

    # --- App Store Connect API key: accept raw or base64 .p8 ---
    require 'base64'
    raw = ENV['ASC_KEY_P8'].to_s

    pem =
      if raw.include?('BEGIN PRIVATE KEY')
        raw
      else
        Base64.decode64(raw)
      end

    api_key = app_store_connect_api_key(
      key_id:     ENV['ASC_KEY_ID'],
      issuer_id:  ENV['ASC_ISSUER_ID'],
      key_content: pem
    )

    # --- Code signing: fetch certs/profiles from your match repo ---
    match(
      type: "appstore",
      readonly: false,
      app_identifier: [ENV['APP_IDENTIFIER']],
      git_url: ENV['MATCH_GIT_URL'],
      git_basic_authorization: ENV['MATCH_GIT_BASIC_AUTHORIZATION'],
      keychain_name: "ci_tmp",
      keychain_password: "temp_password_123",
      api_key: api_key,
      team_id: ENV['TEAM_ID']
    )

    # --- Build (Xcode handles signing with the profiles we just installed) ---
    build_app(
      workspace: "ios/Runner.xcworkspace",
      scheme: "Runner",
      configuration: "Release",
      export_method: "app-store",
      output_directory: "ios/build",
      output_name: "BitTracker.ipa",
      clean: true
    )

    # --- Upload to TestFlight ---
    upload_to_testflight(
      api_key: api_key,
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )
  ensure
    # Always clean up the tmp keychain
    delete_keychain(name: "ci_tmp")
  end
end
