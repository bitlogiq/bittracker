name: iOS TestFlight

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  ios-testflight:
    runs-on: macos-latest

    env:
      # App metadata
      APP_IDENTIFIER: za.co.bitlogiq.bittracker
      TEAM_ID: R4R4AW7JUQ

      # fastlane match (cert/profiles) repo & auth
      # TIP: make MATCH_GIT_URL include the token (see below)
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_GIT_TOKEN: ${{ secrets.MATCH_GIT_TOKEN }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      # App Store Connect API key (base64 of the .p8 file) + IDs
      ASC_KEY_ID:        ${{ secrets.ASC_KEY_ID }}
      ASC_ISSUER_ID:     ${{ secrets.ASC_ISSUER_ID }}
      ASC_KEY_P8:        ${{ secrets.ASC_KEY_P8 }}

      # Where we’ll temporarily write the decoded key (for verification)
      APP_STORE_CONNECT_API_KEY_PATH: ${{ github.workspace }}/appstore_connect_api_key.json

      # Tell Bundler to use the Gemfile in the repo root
      BUNDLE_GEMFILE: ${{ github.workspace }}/Gemfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure MATCH_GIT_URL includes token (log redacted check)
        run: |
          set -euo pipefail
          if [[ "${MATCH_GIT_URL}" != *"x-access-token"* ]]; then
            echo "NOTE: MATCH_GIT_URL should embed a token like:"
            echo "  https://x-access-token:<TOKEN>@github.com/<owner>/<repo>.git"
          fi

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter pub get
        run: |
          set -euo pipefail
          flutter pub get

      - name: Set up Ruby (Bundler pinned)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler: '2.4.19'
          bundler-cache: true

      - name: Bundle install (root Gemfile)
        run: |
          set -euo pipefail
          bundle install --jobs 4 --retry 3

      - name: Prepare App Store Connect API key file (decode + verify)
        run: |
          set -euo pipefail
          if [ -z "${ASC_KEY_P8}" ]; then
            echo "❌ ERROR: ASC_KEY_P8 secret is missing"
            exit 1
          fi

          # Decode base64 into a file (fail if invalid base64)
          if echo "$ASC_KEY_P8" | base64 --decode > "$APP_STORE_CONNECT_API_KEY_PATH" 2>/dev/null; then
            echo "✅ Decoded ASC_KEY_P8 to $APP_STORE_CONNECT_API_KEY_PATH"
          else
            echo "❌ ERROR: ASC_KEY_P8 is not valid base64"
            exit 1
          fi

          # Sanity check content
          if ! grep -q "PRIVATE KEY" "$APP_STORE_CONNECT_API_KEY_PATH"; then
            echo "❌ ERROR: Decoded file doesn't look like a .p8 private key"
            exit 1
          fi

      - name: CocoaPods install
        working-directory: ios
        run: |
          set -euo pipefail
          bundle exec pod install --verbose

      - name: Build & upload with fastlane (lane: ios ci)
        working-directory: ios
        run: |
          set -euo pipefail
          # If your MATCH_GIT_URL does not already embed a token,
          # force HTTPS with token here as a fallback:
          if [[ "${MATCH_GIT_URL}" != *"x-access-token"* && -n "${MATCH_GIT_TOKEN}" ]]; then
            export MATCH_GIT_URL="https://x-access-token:${MATCH_GIT_TOKEN}@${MATCH_GIT_URL#https://}"
          fi

          bundle exec fastlane ios ci

      - name: Archive artifacts (ipa, logs, xcarchive)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            ios/build/**/*.ipa
            ~/Library/Logs/gym/**/*.log
            /Users/runner/Library/Logs/gym/**/*.log
            /Users/runner/Library/Developer/Xcode/Archives/**/*.xcarchive
