default_platform(:ios)

platform :ios do
  desc "CI lane to build and upload to TestFlight"
  lane :ci do
    # --- Temporary CI keychain ---
    create_keychain(
      name: "ci_tmp",
      default_keychain: true,
      unlock: true,
      password: "temp_password_123",
      timeout: 3600,
      lock_when_sleeps: false,
      add_to_search_list: true,
      require_create: false
    )

    # --- App Store Connect API key (read raw content from file written by workflow) ---
    api_key = app_store_connect_api_key(
      key_id:     ENV['ASC_KEY_ID'],
      issuer_id:  ENV['ASC_ISSUER_ID'],
      key_content: File.read(ENV['APP_STORE_CONNECT_API_KEY_PATH'])
    )

    # --- Code signing: fetch certs/profiles from your match repo ---
    match(
      type: "appstore",
      readonly: false,
      app_identifier: ["za.co.bitlogiq.bittracker"],
      git_url: ENV["MATCH_GIT_URL"],                                # ensure no trailing slash in the secret
      git_basic_authorization: ENV["MATCH_GIT_BASIC_AUTHORIZATION"],# Base64("x-access-token:<PAT>")
      keychain_name: "ci_tmp",
      keychain_password: "temp_password_123",
      api_key: api_key,
      team_id: ENV["TEAM_ID"]
    )

    # --- Build the app (Flutter iOS uses scheme Runner) ---
    build_app(
      scheme: "Runner",
      configuration: "Release",
      export_method: "app-store",
      xcargs: "DEVELOPMENT_TEAM=#{ENV['TEAM_ID']} -allowProvisioningUpdates",
      output_directory: "ios/build",
      output_name: "BitTracker.ipa"
    )

    # --- Upload to TestFlight using the same API key ---
    upload_to_testflight(
      api_key: api_key,
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )
  ensure
    # Always clean up the temp keychain
    delete_keychain(name: "ci_tmp")
  end
end
